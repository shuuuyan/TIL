【Ruby on Rails】
Ruby on Railsは、主に2つの理念から構成されているフレームワークです。 この理念は非常に深い意味がある。
DRYとCoCの理念に則って作成する、Rubyのフレームワーク。

⑴ DRY(Don`t Repeat Yourself)
同じコードを繰り返し書くことを避け、保守管理しやすい状態に保ちバグを減らす。

⑵ CoC(Convention Over Configuration)
Ruby on Rails自体で規約を用意しているため、規約に則ったコードを書くことで記述量を少なくすることができ、スピーディーな開発が可能。
このように、シンプルに扱いやすさを求めることができるフレームワークといえる。

【Ruby on Railsの特徴】
・ 設計ルールがしっかり決まっているため、ルールにしたがってシンプルに記述できる。
・ 様々な開発ツールがある。
・ 日本語の参考文献が多い。
　→ スピーディーに開発を行うことができる。
 
 Railsは非常に開発効率が高いことが特徴のフレームワーク。 ベンチャー企業におけるスピードが求められる開発や、アプリケーションの試作品などに使われる。

【railsコマンド】
Railsに関する命令は、すべて rails というコマンドから始まります。
「rails コマンド名」 とすることで、さまざまな動作を実行できます。

【rails newコマンド】
Railsで新規アプリケーションを作成する際に使用します。
このコマンドを実行することで、Railsアプリケーションの雛形が作成されます。
% rails new アプリケーション名

【-dオプション】
-d オプションは、rails newコマンドにつけることができるオプションです。
-d オプションをつけると、作成するアプリが利用するデータベースの管理システムの種類を指定できます。
【例】　　　% rails new アプリケーション名 -d mysql

【rails db:createコマンド】
新しくデータベースを作成するには rails db:create というコマンドを実行します。
　% rails db:create

【Sequel Pro(シークエル・プロ)】
Sequel Proはデータベースの中身をわかりやすく視覚化して表示するアプリケーションです。 
このアプリケーションを使用することで、データベースを視覚的に操作でき、より簡単に管理できます。

【rails sコマンド】
このコマンドをアプリケーションのディレクトリで実行すると、アプリケーションを動かすためのサーバーが起動します。

【MVC(エム・ブイ・シー)】
Railsで登場する、モデル/ビュー/コントローラーという役割の総称です。
Railsをはじめ とするWebアプリケーションシステムの処理の構造を表しています。

